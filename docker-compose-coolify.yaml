version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgres://postgres:iqF7IxfouW0Hskx0wL6gj8lp3R7dJiqXIkAViqGt2LZMrlypC6OkDeSlmxM5IfoP@twkw00kcwco0skoss80000c4:5432/postgres
      - DB_HOST=twkw00kcwco0skoss80000c4
      - DB_USER=postgres
      - DB_PASS=iqF7IxfouW0Hskx0wL6gj8lp3R7dJiqXIkAViqGt2LZMrlypC6OkDeSlmxM5IfoP
      - DB_NAME=postgres
      - DB_PORT=5432
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - REDIS_URI=redis://${REDIS_HOST:-redis}:6379
      - FRONTEND_URL=${FRONTEND_URL}
    volumes:
      - backend_data:/usr/src/app/public
      - backend_private:/usr/src/app/private
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    environment:
      - REACT_APP_BACKEND_URL=${BACKEND_URL}
      - REACT_APP_TITLE=${APP_TITLE:-Ticketz}
    volumes:
      - backend_data:/var/www/backend-public:ro
      - backend_private:/var/www/backend-private:ro
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

volumes:
  backend_data:
    driver: local
  backend_private:
    driver: local
