version: '3.8'

services:
  backend:
    image: ${BACKEND_IMAGE}
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_NAME=${ADMIN_NAME}
      - ADMIN_PHONE=${ADMIN_PHONE}
      - ADMIN_DEPARTMENT=${ADMIN_DEPARTMENT}
      - ADMIN_ROLE=${ADMIN_ROLE}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM=${SMTP_FROM}
      - SMTP_SECURE=${SMTP_SECURE}
      - SMTP_REJECT_UNAUTHORIZED=${SMTP_REJECT_UNAUTHORIZED}
      - WHATSAPP_ENABLED=${WHATSAPP_ENABLED}
      - WHATSAPP_WEBHOOK_URL=${WHATSAPP_WEBHOOK_URL}
      - WHATSAPP_API_URL=${WHATSAPP_API_URL}
      - WHATSAPP_API_TOKEN=${WHATSAPP_API_TOKEN}
      - WHATSAPP_WEBHOOK_TOKEN=${WHATSAPP_WEBHOOK_TOKEN}
      - WHATSAPP_WEBHOOK_VERIFY_TOKEN=${WHATSAPP_WEBHOOK_VERIFY_TOKEN}
      - WHATSAPP_WEBHOOK_VERIFY_MODE=${WHATSAPP_WEBHOOK_VERIFY_MODE}
      - WHATSAPP_WEBHOOK_VERIFY_SIGNATURE=${WHATSAPP_WEBHOOK_VERIFY_SIGNATURE}
      - WHATSAPP_WEBHOOK_VERIFY_SIGNATURE_KEY=${WHATSAPP_WEBHOOK_VERIFY_SIGNATURE_KEY}
      - WHATSAPP_WEBHOOK_VERIFY_SIGNATURE_ALGORITHM=${WHATSAPP_WEBHOOK_VERIFY_SIGNATURE_ALGORITHM}
      - WHATSAPP_WEBHOOK_VERIFY_SIGNATURE_HEADER=${WHATSAPP_WEBHOOK_VERIFY_SIGNATURE_HEADER}
      - WHATSAPP_WEBHOOK_VERIFY_SIGNATURE_HEADER_VALUE=${WHATSAPP_WEBHOOK_VERIFY_SIGNATURE_HEADER_VALUE}
    volumes:
      - backend_data:/app/public
    depends_on:
      - redis
    ports:
      - "3000"
    networks:
      - coolify
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 5
        window: 180s

  frontend:
    image: ${FRONTEND_IMAGE}
    restart: unless-stopped
    environment:
      - NGINX_PORT=80
      - BACKEND_URL=http://backend:3000
    volumes:
      - backend_data:/var/www/backend-public:ro
    depends_on:
      - backend
    ports:
      - "80"
    networks:
      - coolify
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 5
        window: 180s

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data

networks:
  coolify:
    external: true

volumes:
  backend_data:
  redis_data:
