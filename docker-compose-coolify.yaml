version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:iqF7IxfouW0Hskx0wL6gj8lp3R7dJiqXIkAViqGt2LZMrlypC6OkDeSlmxM5IfoP@twkw00kcwco0skoss80000c4:5432/postgres
      - REDIS_URL=redis://default:rZzhHPOIoCFkQ72GtiPFmX852eji4fjON2llkUMT4njZneILmtbnQGIAS7TIviNY@hsscggc48w4oo8c84o8ww4ck:6379/0
      - JWT_SECRET=${JWT_SECRET}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_NAME=${ADMIN_NAME}
      - ADMIN_PHONE=${ADMIN_PHONE}
      - ADMIN_DEPARTMENT=${ADMIN_DEPARTMENT}
      - ADMIN_ROLE=${ADMIN_ROLE}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM=${SMTP_FROM}
      - SMTP_SECURE=${SMTP_SECURE}
      - SMTP_REJECT_UNAUTHORIZED=${SMTP_REJECT_UNAUTHORIZED}
      - WHATSAPP_ENABLED=${WHATSAPP_ENABLED}
      - WHATSAPP_WEBHOOK_URL=${WHATSAPP_WEBHOOK_URL}
      - WHATSAPP_API_URL=${WHATSAPP_API_URL}
      - WHATSAPP_API_TOKEN=${WHATSAPP_API_TOKEN}
      - WHATSAPP_WEBHOOK_TOKEN=${WHATSAPP_WEBHOOK_TOKEN}
      - WHATSAPP_WEBHOOK_VERIFY_TOKEN=${WHATSAPP_WEBHOOK_VERIFY_TOKEN}
      - WHATSAPP_WEBHOOK_VERIFY_MODE=${WHATSAPP_WEBHOOK_VERIFY_MODE}
      - WHATSAPP_WEBHOOK_VERIFY_SIGNATURE=${WHATSAPP_WEBHOOK_VERIFY_SIGNATURE}
      - WHATSAPP_WEBHOOK_VERIFY_SIGNATURE_KEY=${WHATSAPP_WEBHOOK_VERIFY_SIGNATURE_KEY}
      - WHATSAPP_WEBHOOK_VERIFY_SIGNATURE_ALGORITHM=${WHATSAPP_WEBHOOK_VERIFY_SIGNATURE_ALGORITHM}
      - WHATSAPP_WEBHOOK_VERIFY_SIGNATURE_HEADER=${WHATSAPP_WEBHOOK_VERIFY_SIGNATURE_HEADER}
      - WHATSAPP_WEBHOOK_VERIFY_SIGNATURE_HEADER_VALUE=${WHATSAPP_WEBHOOK_VERIFY_SIGNATURE_HEADER_VALUE}
      - PORT=3000
      - UPLOAD_DIR=/app/uploads
      - PUBLIC_DIR=/app/public
    ports:
      - "3000:3000"
    volumes:
      - media_storage:/app/uploads
      - system_media:/app/public
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    environment:
      - NODE_ENV=production
      - BACKEND_URL=http://backend:3000
    ports:
      - "8081:80"
    volumes:
      - media_storage:/usr/share/nginx/html/uploads:ro
      - system_media:/usr/share/nginx/html/public:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

networks:
  coolify:
    driver: bridge

volumes:
  backend_data:
  redis_data:
  media_storage:
    name: ${COOLIFY_VOLUME_MEDIA:-media_storage}
  system_media:
    name: ${COOLIFY_VOLUME_SYSTEM:-system_media}
